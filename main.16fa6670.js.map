{"version":3,"sources":["scripts/main.js"],"names":["listHTML","document","querySelector","sortList","list","salaryToNumber","salary","replace","children","sort","li1","li2","dataset","getEmployees","map","li","textContent","position","age","innerHTML","employee","name","join"],"mappings":";AAAA,aAsCC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EApCD,IAAMA,EAAWC,SAASC,cAAc,MAgBxC,SAASC,EAASC,GACVC,IAAAA,EAAiB,SAACC,GACf,OAACA,EAAOC,QAAQ,IAAK,IAAIA,QAAQ,IAAK,KAGxC,OAAA,EAAIH,EAAKI,UAAUC,KAAK,SAACC,EAAKC,GAC5BN,OAAAA,EAAeM,EAAIC,QAAQN,QAC9BD,EAAeK,EAAIE,QAAQN,UAInC,SAASO,EAAaT,GACbA,OAAAA,EAAKU,IAAI,SAAAC,GACP,MAAA,CACGA,KAAAA,EAAGC,YACCD,SAAAA,EAAGH,QAAQK,SACbF,OAAAA,EAAGH,QAAQN,OACdS,IAAAA,EAAGH,QAAQM,OA/BxBlB,EAASmB,UACLN,OAAAA,OAAAA,EAAaV,EAASH,IAAWc,IAAI,SAAAM,GAGhBA,MAAAA,uCAAAA,OAAAA,EAASH,SACXG,4BAAAA,OAAAA,EAASd,OACZc,yBAAAA,OAAAA,EAASF,IAEnBE,wBAAAA,OAAAA,EAASC,KANf,yBASCC,KAAK,IAXV","file":"main.16fa6670.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst listHTML = document.querySelector('ul');\n\nlistHTML.innerHTML = `\n  ${getEmployees(sortList(listHTML)).map(employee => {\n    return `\n      <li\n        data-position=\"${employee.position}\"\n        data-salary=\"${employee.salary}\"\n        data-age=\"${employee.age}\"\n      >\n        ${employee.name}\n      </li>\n    `;\n  }).join('')}\n`;\n\nfunction sortList(list) {\n  const salaryToNumber = (salary) => {\n    return +salary.replace('$', '').replace(',', '');\n  };\n\n  return [...list.children].sort((li1, li2) => {\n    return salaryToNumber(li2.dataset.salary)\n      - salaryToNumber(li1.dataset.salary);\n  });\n}\n\nfunction getEmployees(list) {\n  return list.map(li => {\n    return {\n      'name': li.textContent,\n      'position': li.dataset.position,\n      'salary': li.dataset.salary,\n      'age': li.dataset.age,\n    };\n  });\n}\n"]}